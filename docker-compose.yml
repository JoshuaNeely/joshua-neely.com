version: "3.2"

volumes:
  core_public:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.1.11
      device: 192.168.1.11:/mnt/nfs/joshua-neely.com/core_public

  blog_public:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.1.11
      device: 192.168.1.11:/mnt/nfs/joshua-neely.com/blog_public

  certbot_config:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.1.11
      device: 192.168.1.11:/mnt/nfs/joshua-neely.com/certbot_config


services:
    website_portal:
        network_mode: host

        build: ./portal/
        image: website_portal

        container_name: website_portal

        # reload config + certs every 6h
        # needed if certs are renewed in this time
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"


        ports:
        - target: 80
          published: 80
          protocol: tcp
          mode: host

        - target: 443
          published: 443
          protocol: tcp
          mode: host

        volumes:
        - type: volume
          source: certbot_config
          target: /etc/letsencrypt

        depends_on:
        - core_website
        - blog


    certbot:
        # certbot doesn't use a manifest for some reason, so selecting the architectue is not automatic
        # I am using the rpi version by default here, since this is likely to run on my pi
        #image: certbot/certbot
        image: certbot/certbot:arm32v6-latest
        container_name: website_certbot

        # automatic cert renewal
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

        volumes:
        - type: volume
          source: certbot_config
          target: /etc/letsencrypt


    core_website:
        build: ./core/
        image: core_website

        container_name: core_website

        ports:
        - target: 80
          published: 8082
          protocol: tcp
          mode: host

        volumes:
        - type: volume
          source: core_public
          target: /usr/share/nginx/html


    blog:
        build: ./blog/
        image: website_blog

        container_name: blog_files

        ports:
        - target: 80
          published: 8081
          protocol: tcp
          mode: host

        volumes:
        - type: volume
          source: blog_public
          target: /usr/share/nginx/html
